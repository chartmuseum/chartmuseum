name: build

on:
  push:
    branches:
      #- main
      - v0.13.0-prep
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: setup go environment
        uses: actions/setup-go@v1
        with:
          go-version: '1.15.7'
#      - name: download dependencies
#        run: make bootstrap
#      - name: run unit tests
#        run: make test
#      - name: build binary
#        run: make build-linux
#      - name: run acceptance tests
#        run: sudo pip install virtualenv && make acceptance
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=ghcr.io/helm/chartmuseum
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386
          VERSION=canary

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi

          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg revision=$(git rev-parse --short HEAD) \
            ${TAGS} .
      - name: Release artifacts
        id: release-artifacts
        run: |
          VERSION="${{ steps.prepare.outputs.version }}" ./.github/release-artifacts.sh
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#        with:
#          platforms: all
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#        with:
#          version: latest
#      - name: Available platforms
#        run: echo ${{ steps.buildx.outputs.platforms }}
#      - name: Docker Buildx (build)
#        run: |
#          docker buildx build --no-cache --pull --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
#      - name: Docker Login
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ secrets.CR_USER_SCBIZU }}
#          password: ${{ secrets.CR_PAT_SCBIZU }}
#      - name: Docker Buildx (push)
#        if: always()
#        run: |
#          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
#      - name: Docker Check Manifest
#        if: always()
#        run: |
#          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
#      - name: Clear
#        if: always()
#        run: |
#          rm -f ${HOME}/.docker/config.json
